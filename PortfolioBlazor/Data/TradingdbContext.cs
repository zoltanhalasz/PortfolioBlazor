// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata;


namespace PortfolioBlazor.Data
{
    public partial class TradingdbContext : DbContext
    {
        public TradingdbContext()
        {
        }

        public TradingdbContext(DbContextOptions<TradingdbContext> options)
            : base(options)
        {
        }

        public virtual DbSet<History> History { get; set; }
        public virtual DbSet<StockSymbols> StockSymbols { get; set; }

        public virtual DbSet<Transaction> Transactions { get; set; }

        public virtual DbSet<Position> Positions { get; set; }

        protected override void OnConfiguring(DbContextOptionsBuilder optionsBuilder)
        {
            optionsBuilder.UseSqlServer("");
        }

        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<History>(entity =>
            {
                entity.HasIndex(e => e.Symbol)
                    .HasName("IX_History_1");

                entity.HasIndex(e => e.Timestamp)
                    .HasName("IX_History");

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Close)
                    .HasColumnName("close")
                    .HasColumnType("decimal(18, 4)");

                entity.Property(e => e.High)
                    .HasColumnName("high")
                    .HasColumnType("decimal(18, 4)");

                entity.Property(e => e.Low)
                    .HasColumnName("low")
                    .HasColumnType("decimal(18, 4)");

                entity.Property(e => e.Open)
                    .HasColumnName("open")
                    .HasColumnType("decimal(18, 4)");

                entity.Property(e => e.Symbol)
                    .IsRequired()
                    .HasColumnName("symbol")
                    .HasMaxLength(4);

                entity.Property(e => e.Timestamp)
                    .HasColumnName("timestamp")
                    .HasColumnType("datetime");

                entity.Property(e => e.Volume)
                    .HasColumnName("volume")
                    .HasColumnType("decimal(18, 4)");
            });

            modelBuilder.Entity<StockSymbols>(entity =>
            {
                entity.HasIndex(e => e.StockSymbol)
                    .HasName("IX_StockSymbols")
                    .IsUnique();

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.StockSymbol)
                    .IsRequired()
                    .HasMaxLength(50);
            });


            modelBuilder.Entity<Position>(entity =>
            {
                entity.ToTable("Positions");

                entity.Property(e => e.Id).HasColumnName("id");
                

                entity.Property(e => e.PurchasePrice)
                    .HasColumnName("PurchasePrice")
                    .HasColumnType("decimal(18, 4)");

                entity.Property(e => e.MarketPrice)
                    .HasColumnName("MarketPrice")
                    .HasColumnType("decimal(18, 4)");

                entity.Property(e => e.Qty)
                    .HasColumnName("Qty")
                    .HasColumnType("decimal(18, 4)");

                entity.Property(e => e.Symbol)
                    .IsRequired()
                    .HasColumnName("symbol")
                    .HasMaxLength(4);

                entity.Property(e => e.PurchaseDate)
                    .HasColumnName("PurchaseDate")
                    .HasColumnType("datetime");

            });

            modelBuilder.Entity<Transaction>(entity =>
            {
                entity.ToTable("Transactions");

                entity.Property(e => e.Id).HasColumnName("id");                

                entity.Property(e => e.Price)
                    .HasColumnName("Price")
                    .HasColumnType("decimal(18, 4)");

                entity.Property(e => e.Qty)
                    .HasColumnName("Qty")
                    .HasColumnType("decimal(18, 4)");

                entity.Property(e => e.Symbol)
                    .IsRequired()
                    .HasColumnName("symbol")
                    .HasMaxLength(4);

                entity.Property(e => e.Type)
                  .IsRequired()
                  .HasColumnName("Type");
                

                entity.Property(e => e.Timestamp)
                    .HasColumnName("Timestamp")
                    .HasColumnType("datetime");

            });

            OnModelCreatingPartial(modelBuilder);
        }

        partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
    }
}